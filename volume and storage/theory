ðŸ“¦ Docker Volumes & Storage
1. What are Volumes?
Volumes are a preferred way to persist data used and generated by Docker containers.
Unlike bind mounts, volumes are managed by Docker, making them safer and easier to back up or migrate.
2. Types of Storage in Docker
Volumes (Recommended)
Bind Mounts (Directly mapping host directories)
tmpfs Mounts (Ephemeral storage, stored in memory)
3. Docker Volume Commands
Create a Volume:

docker volume create <volume_name>
List Volumes:

docker volume ls
Inspect a Volume:

docker volume inspect <volume_name>
Remove a Volume:

docker volume rm <volume_name>
Remove Unused Volumes:

docker volume prune
4. Using Volumes with Containers
Mount Volume to Container:

docker run -d --name <container_name> -v <volume_name>:/path/in/container <image_name>
Example:

docker run -d --name my_container -v my_volume:/data busybox
5. Bind Mounts (Alternative to Volumes)
Allows direct mapping of host directories.
Example:

docker run -d --name my_container -v /host/path:/container/path busybox
6. Data Persistence Best Practices
Use Volumes for production data.
Use Bind Mounts for development purposes (e.g., sharing code).
Always inspect and prune unused volumes to save disk space.
7. Inspecting Volume Data (From Host Machine)
Docker volumes are stored under:
Linux: /var/lib/docker/volumes/
Windows (WSL2): \\wsl$\docker-desktop-data\version-pack-data\community\docker\volumes\
